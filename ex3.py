# Задача 3. Удаление старых файлов
# Напишите скрипт, который удаляет файлы в указанном каталоге, которые не
# изменялись более заданного количества дней. Скрипт должен принимать путь к
# каталогу и количество дней.
# Подсказка № 1
# Используйте time.time() для получения текущего времени в секундах с начала
# эпохи (01.01.1970). Это поможет вам определить, сколько времени прошло с
# последнего изменения файлов.
# Подсказка № 2
# Преобразуйте количество дней в секунды для сравнения. Умножьте количество дней
# на 86400 (количество секунд в одном дне), чтобы получить пороговое значение
# времени.
# Подсказка № 3
# Используйте os.walk() для рекурсивного обхода всех каталогов и файлов в
# указанном каталоге. Это позволит вам проверить каждый файл, независимо от уровня
# вложенности.
# Подсказка № 4
# Для получения времени последнего изменения файла используйте
# os.path.getmtime(). Сравните это время с пороговым значением, чтобы
# определить, нужно ли удалить файл.
# Подсказка № 5
# Для удаления файлов используйте os.remove(). Убедитесь, что файл действительно
# нужно удалить, чтобы избежать случайного удаления важных данных.
import os
import time


def del_old_file(target_dir,dayold):

    now = time.time()
    oldlimit = now - (dayold * 86400)  #(86400 секунд в дне)
    for root, dirs, files in os.walk(target_dir):
        for file in files:
            file_path = os.path.join(root, file)
            file_mod_time = os.path.getmtime(file_path) # Время последнего изменения файла

            if file_mod_time < oldlimit:
                os.remove(file_path)
                print(f"Удален файл: {file_path}")


target_dir=r'c:\Users\User\PycharmProjects\Gbpractic\q4_p7\test_dir'
if not os.path.isdir(target_dir):
    print('Директория не найдена')
else:
    del_old_file(target_dir,2)

